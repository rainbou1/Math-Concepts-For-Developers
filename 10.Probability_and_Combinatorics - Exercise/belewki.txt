Какво трябва да съдържа Jupiter Notebook
Какво трябва да съдържа 
Анализ на задачата
Математика
Код

Типичен въпрос : Какво представлява линейна функция.
Изчисляване на първа производна

scientific citation - за цитиране.
В края на jupiter nodes да сложим references.

От задачите:
зад 1
Разпределенията са функции
С точка и запетая дефинираме параметри - те ще са константи при извикването на функцията
Имаме и променливи, и параметри 
f(x ; n, p) ------> f(x) практически си е функция на x

Ще разберем какво правят тези параметри.

Фундаментална Теорема на Аритметиката - всяко едно число може да бъде разложено на прости множители.
Фундаментална Теорема на Алгебрата - Всеки полином от n-та степен с комплексни коефициенти има точно n на брой корена.
Фундаментална Теорема на Анализ - Диференцирането и интегрирането са обратни, ако пренебрегнем загубата на информация при диференциране на константа.
Централна Гранична Теорема - независимо от това какви разпределения имаме, сумата от такива разпределения е гаусово разпределение

зад 2
Третираме функциите като разпределения.

Constraint optimization - оптимизация на определена цена.
Probabilistic Programming Language.

Нека имаме някакво случайноо събитие...въпросът е колко ни изненадва това събитие, когато се случи.
А едно събитие което никога не се случва, никога не ни изненадва.
Едно събитие, което се случва с вероятност 20%, ще ни изненада в 20 случая от 100.
Ако очакваме нещо да се случи 80%, в 80 от 100 ще съм прав и няма да бъда изненадан.
Не е правилно да кажем какво ще стане, защото не знаем какво ще стане.
Колко най-много може да ме изненада едно събитие - най-много може да изненада, ако става с вероятност 50/50.
Количеството изненада, което ни носи едно събитие, за това че се е случило или че не се е случило, може да се пробваме да го представим в някаква функция.
Изненадата я наричаме с I
Максималната изненада е при вероятност 0,5.
Изненадата, която ми е доставила това събитие при случването си, ми носи повече информация за него.
I e information.

Например резултата от ьвърлянето на монета може бъде записан в булева променлива is_heads = True | False
И това може да се запише в 1 бит.

Ако имаме още една монета = вече записваме резултата в 2 бита....и т.н.
Ако имаме 100 монети - 100 бита.
Дървото на Хъфман е оптимален начин за записване на информацията.
Ако монетите не са честни и имаме 90 езита - ще ни трябва по-малко информация.
100 монети имат 2 на степен 100 възможни състояния, и можем да ги запишем в 100 бита.

В n бита може да запишем 2^n състояния.
Ако имаме m състояния, колко бита ни трябват да ги опишем - log2m

Това е информацията, която получаваме - трябва да видим колко е изненадата - информацията, която не получаваме.
Тъй като p e между 0 и 1, 2 на тази степен е < 2.
I = -log2p.
Тя е мярка за това колко разбираме от него.

Голяма изненада означава хаотичност.
Мярката за тази хаотичност се нарича ентропия.
и ако имаме информацията, умножена по вероятността, за това да се случи, получаваме ентропията за тази вероятност.
Полезни са случаите, които имаме средно количество ентропия.


Вероятност по информацият
Ако нещо много ни изненадва и се случва, 
Безпорядък - не само колко информация има, но и колко често се случва.

Условна вероятност.
Information Gain - безпорядъка е намалял. = H (a posteriori) - H (a priori) < 0
Shannon Information, Shannon entropy.

Дискретните дистрибуции са само за цели числа.
scipy.stats - 
chi square се ползва, когато сравняваме категорийни променливи.
np.arange връща само цели числа.

n - брой опити
колкото повече опити - толкова повече са успешни
plt.subplots - няколко графики 

Биномното разпределение идва от много на брой бернули trials.
A Bernoulli trial (or experiment) is a random experiment where there are exactly two possible outcomes: success and failure.
scipy.stats.binom - това което връща е, колко на брой успешни случая ще има, когато имаме n на брой опита и вероятността за всеки от опитите да се случи е p

Гаусово - мю е център на симетрията.
mu се нарича средно аритметично на гаусовото разпределение.
сигма е мярка колко е широко разпределението
сигма на квадрат се нарича дисперсия - разпръсвание.

Сигма ще го наречем стандартно отклонение.
При n клоняшо към безкрайност биномното разпределение става равно на гаусовото. p ще ни определи кое е средното аритметично.
pause and ponder.

Централна гранична теорема - вероятностно разпределение и площта под графиката да е = 1
Имаме някакво разпределение, значи имаме някаква вероятностна функция.
От нея правим sample - тоест искаме числа, които имат такова разпределение.
Искаме sample, което има такова разпределение.
Всяка една от извадките си има числа. - в задачата е да има по 25 числа.
Във всяка извадка събираме числата и получаваме сума число.
Ако третираме тази променлива е случайна и направим хистограма от сумите, ще видим, че тя много силно наподобява гаусовото разпределение, независимо какво е било първоначалното разпределение. 
Началното разпределение трябва да е вероятностно и площта под графиката трябва да е 1.
Събитие от вероятности е действие или.
Sample на български е извадка.
Хистограмата на сумите наподобява гаусово разпределение. Независимо от това какво е било първоначалмното разпределение, стига да е вероятностно.
Вероятностно разпределение = вероятностите са между 0 и 1 площта под графиката трябва да 1
Разпределението на сумите е гаусово

В случая говорим за събиране на вероятности.

Затова когато трябва да събираме стойностите на някакви данни, или агрегираме - малко губим информация за първоначалния вид на графиката. Ако се опитаме от вече агрегирани данни да правим хистограми, получаваме гаусово разпределение.

Хистограмата на само 1 извадка ще бъде подобна на оргиналното разпределение, ама сумите не. 

Задачата Birthday.
3 choose 2.
4 choose 2 - 

С добавянето на човек се увеличават хората.
Всеки пита всеки дали има същия рожден ден като него.
И и като минат двойките 183, ще имаме 50%
Тоест имаме n choose 2 да бъде > 183.
23 choose 2 са 253 двойките.

Ама каква е тогава вероятността 2-ма да не споделят рожден.
Допълнителна вероятност.

Така ще търсим как да подредим хората, че да нямат общ рожден ден.
Става задача с вариации и повторения.
Как може да направим най-лошия случай.

Тогава слагаме първия в 1 от 365 дати.
За втория остава една по-малко.

Така получаваме вариация от 365 елемента r-ti клас. Така можем да подредим хората, така че да нямат общ рожден ден.
А общите възможни случаи е всеки 1 човек да си е избрал дата = тоест всеки си избира 365 дена - тоест всичките възможности за 365 на р-та.

Тоест в числителя имаме - случаите, асоцирани със събитието - никой не споделя рожден ден.
А в знаменателия имаме всички възможни рожденни дни.
И вероятността е числителя - всички възможни случаи, които ни интересуват, върху всички възможни хора.


Wikipedia - Birthday problem.



Основната идея на една хешираща функция е да бъде математическа - при един и същи вход, връща един и същи изход.
За да бъде хещираща, искаме информацията на изхода да е с еднаква дължина
Всяка една функция отговаряща на тези условия може да е хешираща.
Резултата се нарича хеш.
Има 2 варианта хеширащи функции.

Единия е криптографска хешираща функция - да е сигурна.
Другата е ежедневна хешираща функция.

В криптографията има още едно изискване - малка промяна във входа да дава голяма разлика в изхода.
Празен стринг има хеш.
При криптографските функции шанса за колизии е малък. 
Ако имаме много на брой пароли, колко ни трябват, за да има 50% вероятност за колизия.

Функциите образуват линейно пространство.
Има 8 аксиоми, които трябва да проверим.

Линейното пространство (или векторното пространство) е множество с определени операции, които трябва да отговарят на определени аксиоми. За да проверим дали дадено множество с операции образува линейно пространство, трябва да проверим следните осем аксиоми:

Асоциативност на събирането:
(
𝑢
+
𝑣
)
+
𝑤
=
𝑢
+
(
𝑣
+
𝑤
)
(u+v)+w=u+(v+w)
за всички 
𝑢
,
𝑣
,
𝑤
u,v,w в линейното пространство.

Комутативност на събирането:
𝑢
+
𝑣
=
𝑣
+
𝑢
u+v=v+u
за всички 
𝑢
,
𝑣
u,v в линейното пространство.

Съществуване на неутрален елемент за събиране (нулев вектор):
𝑢
+
0
=
𝑢
u+0=u
за всеки 
𝑢
u в линейното пространство, където 
0
0 е нулевият вектор.

Съществуване на обратен елемент за събиране:
За всеки 
𝑢
u в линейното пространство съществува вектор 
−
𝑢
−u, такъв че:
𝑢
+
(
−
𝑢
)
=
0
u+(−u)=0

Асоциативност на умножението с числа:
𝑎
(
𝑏
𝑢
)
=
(
𝑎
𝑏
)
𝑢
a(bu)=(ab)u
за всяко число 
𝑎
a и 
𝑏
b и всеки вектор 
𝑢
u в линейното пространство.

Неутрален елемент за умножение с числа:
1
⋅
𝑢
=
𝑢
1⋅u=u
за всеки вектор 
𝑢
u в линейното пространство, където 
1
1 е единичното число.

Дистрибутивност на умножението с числа спрямо събирането на вектори:
𝑎
(
𝑢
+
𝑣
)
=
𝑎
𝑢
+
𝑎
𝑣
a(u+v)=au+av
за всяко число 
𝑎
a и всички вектори 
𝑢
u и 
𝑣
v в линейното пространство.

Дистрибутивност на умножението с числа спрямо събирането на числа:
(
𝑎
+
𝑏
)
𝑢
=
𝑎
𝑢
+
𝑏
𝑢
(a+b)u=au+bu
за всяко число 
𝑎
a и 
𝑏
b и всеки вектор 
𝑢
u в линейното пространство.

Тези аксиоми гарантират, че операциите на събиране на вектори и умножение на вектори с числа са съвместими и водят до структури, които наричаме линейни пространства.
















Ред на Тейлър е сума от базисни функции
Една функция е представяне като сума на базисни функции.
Два вектора са ортогонални, ако скаларното им произведение е 0.
Също така 2 функции са ортогонални, ако записаното им прозведение с интеграла = 0.
В случая базисните вектори са синуси и косинуси (рисунката на косинусите).
Синуса и косинуса представлява ортонормиран базис.
Дължина на вектор наричаме скаларното произведение на вектора със себе си.
И дължина на функцията е интеграл от нейния квадрат.

Ако функцията е функция на времето, я наричаме сигнал.
Имаме и амплитуда и честота.
Теорема на nyquist
Анализа на фурие дава възможност да разберем кое участва в този запис
fft - fast furie transform.
Има честоти които са отрицателни.